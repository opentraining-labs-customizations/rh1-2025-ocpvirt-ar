---
- name: Install the latest version of git, python3-pip, ansible-core, vim, and jq
  ansible.builtin.dnf:
    name:
      - git
      - python3-pip
      - ansible-core
      - vim
      - jq
    state: latest

- name: Clone the repo and copy lab script
  ansible.builtin.command: "{{ item }}"
  loop:
    - sudo git clone https://github.com/opentraining-labs-customizations/rh1-lab17-ocpvirt.git /opt/rh1-lab17-ocpvirt/
    - sudo cp /opt/rh1-lab17-ocpvirt/lab /usr/local/bin/
    - sudo chmod +x /usr/local/bin/lab

- name: Install the ansible-galaxy collection
  ansible.builtin.command: "ansible-galaxy collection install -r /opt/rh1-lab17-ocpvirt/requirements.yml -p /usr/share/ansible/collections/"

- name: Install the kubernetes and passlib
  ansible.builtin.command: "pip install kubernetes passlib"

- name: Create the users on bastion
  ansible.builtin.user:
    name: "{{ ocp4_workload_authentication_htpasswd_user_base }}{{ item }}"
    state: present
    shell: /bin/bash
    password: "{{ common_password | password_hash }}"
  loop: "{{ range(1, num_users + 1) | list }}"
    
- name: Setting facts so that they will be persisted in the fact cache
  when: cloud_provider == 'openshift_cnv'
  ansible.builtin.set_fact:
    ocp4_base_domain: "{{ cluster_dns_zone }}"
    cacheable: yes
    
- name: OpenShift Access Data
  when: cloud_provider == 'openshift_cnv'
  vars:
    _bastion_inventory_name: "{{ groups['bastions'][0] }}"
  agnosticd_user_info:
    user: "{{ ocp4_workload_authentication_htpasswd_user_base }}{{ item }}"
    data:
      bastion_public_hostname: "{{ openshift_cnv_ssh_address }}"
      bastion_ssh_port: "{{ hostvars[groups['bastions'][0]].bastion_ssh_port }}"
      bastion_ssh_password: "{{ common_password }}"
  loop: "{{ range(1, num_users + 1) | list }}"

- name: Setting facts so that they will be persisted in the fact cache
  when: cloud_provider == 'gcp'
  ansible.builtin.set_fact:
    ocp4_base_domain: "{{ guid }}.{{ cluster_dns_zone }}"
    cacheable: yes
    
- name: OpenShift Access Data
  when: cloud_provider == 'gcp'
  vars:
    _bastion_inventory_name: "{{ groups['bastions'][0] }}"
  agnosticd_user_info:
    user: "{{ ocp4_workload_authentication_htpasswd_user_base }}{{ item }}"
    data:
      bastion_public_hostname: "bastion.{{ guid }}.{{ ocp4_base_domain }}."
      bastion_ssh_password: "{{ common_password }}"
  loop: "{{ range(1, num_users + 1) | list }}"

- name: Deploy Showroom
  ansible.builtin.include_role:
    name: ocp4_workload_showroom
  
- name: Authenticate on OpenShift cluster
  ansible.builtin.command:
    cmd: "oc login -u {{ openshift_cluster_admin_username }} -p {{ openshift_cluster_admin_password }} {{ openshift_api_url }}"
  register: login_result

- name: Executing lab prerequisites on cluster
  when: cloud_provider == 'openshift_cnv'
  ansible.builtin.command:
    cmd: "ansible-playbook -e num_users={{ num_users }} /opt/rh1-lab17-ocpvirt/admin-configure-environment.yaml"
  register: admin_playbook_result

- name: Executing lab prerequisites on cluster
  when: cloud_provider == 'gcp'
  ansible.builtin.command:
    cmd: "ansible-playbook -e num_users={{ num_users }} -e nmstate_cfg=true /opt/rh1-lab17-ocpvirt/admin-configure-environment.yaml"
  register: admin_playbook_result
